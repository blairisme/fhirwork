FHIR Queries

CREATE
To create a new resource in a server-assigned location, the “create” interaction is used. However, if the client wants to have control of the newly submitted id resource, then the “update” interaction should rather be used. The create interaction is performed by an HTTP POST command as shown:
  POST [base]/[type] {?_format=[mime-type]}
 
VARIANT SEARCHES
The compartment can be searched for either all possible resources or for a particular resource type, respectively:
  GET [base]/[Compartment]/[id]/{*?[parameters]{&_format=[mime-type]}}
  GET [base]/[Compartment]/[id]/[type]{?[parameters]{&_format=[mime-type]}}
For example, to retrieve all the observation resources for a particular LOINC code associated with a particular encounter:
  GET [base]/Encounter/23423445/Observation?code=2951-2  {&_format=[mime-type]}

It is also possible to search across multiple resource types:
  GET [base]?_type=Condition,Observation&[parameters]{&_format=[mime-type]}


https://www.hl7.org/fhir/search.html



FHIR RESTful API
Query to find the patient demographics
Given a patient ID "BILIBABY", find the patient:
•	https://api.hspconsortium.org/hspcdemo/open/Patient/BILIBABY
Query to find the bilirubin observations
Find the observations for BILIBABY where the code is for Transcutaneous Bilirubin
•	https://api.hspconsortium.org/hspcdemo/open/Observation?patient=BILIBABY&code=58941-6
SMART on FHIR JavaScript Client
NOTE: This example is not following the SMART on FHIR launch specification.  In your code, you will not connect to an EHR this way, but will be given the serviceUrl and patient values from the launch request.  See Quick Start for details.

function getPatientName (pt) {
  if (pt.name) {
    var names = pt.name.map(function(name) {
      return name.given.join(" ") + " " + name.family.join(" ");
    });
    return names.join(" / ")
  } else {
    return "anonymous";
  }
}

function displayPatient (pt) {
  document.getElementById('patient_name').innerHTML = getPatientName(pt);
}

function displayObservation (observation) {
  var table = document.getElementById("obs_table");
  var row = table.insertRow(1);
  var cell1 = row.insertCell(0);
  var cell2 = row.insertCell(1);
  cell1.innerHTML = observation.code.coding[0].code;
  cell2.innerHTML = observation.valueQuantity.value;
}

var demo = {
    serviceUrl: "https://api.hspconsortium.org/hspcdemo/open",
    patientId: "BILIBABY"
};

// Create a FHIR client (server URL, patient id in `demo`)
var smart = FHIR.client(demo),
    pt = smart.patient;

// Create a patient banner by fetching + rendering demographics
smart.patient.read().then(function(pt) {
  displayPatient (pt);
});

// A more advanced query: search for active Prescriptions, including med details
smart.patient.api.fetchAll({type: "Observation"})
.then(function(results, refs) {
  results.forEach(function(observation){
    displayObservation(observation);
  });
});

https://healthservices.atlassian.net/wiki/spaces/HSPC/pages/63799341/How+to+query+for+Observations

