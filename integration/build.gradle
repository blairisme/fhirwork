/*
 * FHIRWork (c)
 *
 * This work is licensed under the Creative Commons Attribution 4.0
 * International License. To view a copy of this license, visit
 *
 *      http://creativecommons.org/licenses/by/4.0/
 *
 * Author: Blair Butterworth
 */

plugins {
  id 'java'
  id 'idea'
}

dependencies {
  testCompile group: 'com.mashape.unirest', name:'unirest-java', version:'1.4.9'
  testCompile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
  testCompile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
  testCompile group: 'com.google.guava', name: 'guava', version: '23.0'
  testCompile group: 'commons-io', name: 'commons-io', version: '2.6'

  testCompile group: 'junit', name:'junit', version:'4.11'
  testCompile group: 'io.cucumber', name: 'cucumber-java', version: '2.3.1'
  testCompile group: 'io.cucumber', name: 'cucumber-junit', version: '2.3.1'
}

test {
  exclude '**/integration/**'
}

task integrationTest(type: Test, dependsOn: 'waitForEnvStartup') {
  include '**/integration/**'
}

check.dependsOn integrationTest

task waitForEnvStartup(){
  doLast{
    sleep(5 * 1000)
  }
  onlyIf {return true}
}

def getTasksByName(def name){
  return rootProject.allprojects.collect { subproject ->
    subproject.tasks.findAll { it.name == name }
  }.flatten()
}

gradle.projectsEvaluated {
  integrationTest.dependsOn getTasksByName('appStartDaemon')
  integrationTest.dependsOn getTasksByName('envStart')

  waitForEnvStartup.dependsOn getTasksByName('appStartDaemon')
  waitForEnvStartup.dependsOn getTasksByName('envStart')

  integrationTest.finalizedBy getTasksByName('envStop')
  integrationTest.finalizedBy getTasksByName('appStopDaemon')
}
